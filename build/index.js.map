{
  "version": 3,
  "sources": ["server-assets-manifest:@remix-run/dev/assets-manifest", "../node_modules/@remix-run/css-bundle/dist/server.js", "<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/db.server.ts", "../app/routes/cadastro_reme.tsx", "../app/routes/navbar.tsx", "../app/routes/cookie.server.ts", "../app/routes/errorpassword.tsx", "../app/routes/login_cliente.tsx", "../app/routes/notes.$noteId.tsx", "../app/models/note.server.ts", "../app/routes/createacount.tsx", "../app/routes/emailerror.tsx", "../app/routes/successemail.tsx", "../app/routes/notes._index.tsx", "../app/routes/notes.new.tsx", "../app/routes/calebe.tsx", "../app/routes/erro.tsx", "../app/routes/email.tsx", "../app/routes/login.tsx", "../app/routes/notes.tsx", "../app/utils.ts", "../app/routes/venda.tsx", "../app/routes/join.tsx", "../app/routes/root.tsx", "../app/routes/asd.tsx", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export default {'version':'daf88dd0','entry':{'module':'/build/entry.client-CMNCWDN6.js','imports':['/build/_shared/chunk-2DL5WXA5.js','/build/_shared/chunk-RQ7GWW3B.js','/build/_shared/chunk-DG4HR4CT.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-VZBMQ2DS.js','imports':['/build/_shared/chunk-5B6WUN7S.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/asd':{'id':'routes/asd','parentId':'root','path':'asd','index':undefined,'caseSensitive':undefined,'module':'/build/routes/asd-6I6L2CLI.js','imports':['/build/_shared/chunk-KW6WLGT6.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/cadastro_reme':{'id':'routes/cadastro_reme','parentId':'root','path':'cadastro_reme','index':undefined,'caseSensitive':undefined,'module':'/build/routes/cadastro_reme-6OPNONJ6.js','imports':['/build/_shared/chunk-CCWRKC7U.js','/build/_shared/chunk-FFZXZXWH.js','/build/_shared/chunk-KW6WLGT6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/calebe':{'id':'routes/calebe','parentId':'root','path':'calebe','index':undefined,'caseSensitive':undefined,'module':'/build/routes/calebe-R4E4WLBI.js','imports':['/build/_shared/chunk-QSTAXA6X.js','/build/_shared/chunk-S3N74YNX.js','/build/_shared/chunk-KW6WLGT6.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/cookie.server':{'id':'routes/cookie.server','parentId':'root','path':'cookie/server','index':undefined,'caseSensitive':undefined,'module':'/build/routes/cookie.server-DIVTWPGL.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/createacount':{'id':'routes/createacount','parentId':'root','path':'createacount','index':undefined,'caseSensitive':undefined,'module':'/build/routes/createacount-RFCE4TVP.js','imports':['/build/_shared/chunk-DRB32KNV.js','/build/_shared/chunk-TYIAAICA.js','/build/_shared/chunk-XSFBZHAQ.js','/build/_shared/chunk-S3N74YNX.js','/build/_shared/chunk-KW6WLGT6.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/email':{'id':'routes/email','parentId':'root','path':'email','index':undefined,'caseSensitive':undefined,'module':'/build/routes/email-AJGMOHBY.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/emailerror':{'id':'routes/emailerror','parentId':'root','path':'emailerror','index':undefined,'caseSensitive':undefined,'module':'/build/routes/emailerror-XOWYTXGT.js','imports':['/build/_shared/chunk-TYIAAICA.js','/build/_shared/chunk-S3N74YNX.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/erro':{'id':'routes/erro','parentId':'root','path':'erro','index':undefined,'caseSensitive':undefined,'module':'/build/routes/erro-NQR72D5U.js','imports':['/build/_shared/chunk-QSTAXA6X.js','/build/_shared/chunk-S3N74YNX.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/errorpassword':{'id':'routes/errorpassword','parentId':'root','path':'errorpassword','index':undefined,'caseSensitive':undefined,'module':'/build/routes/errorpassword-LALPPX2Z.js','imports':['/build/_shared/chunk-XSFBZHAQ.js','/build/_shared/chunk-S3N74YNX.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/build/routes/join-NRWIVCQV.js','imports':['/build/_shared/chunk-MECONK2F.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-3MCFUBZ4.js','imports':['/build/_shared/chunk-QSTAXA6X.js','/build/_shared/chunk-S3N74YNX.js','/build/_shared/chunk-KW6WLGT6.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login_cliente':{'id':'routes/login_cliente','parentId':'root','path':'login_cliente','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login_cliente-R2OWVG5S.js','imports':['/build/_shared/chunk-CCWRKC7U.js','/build/_shared/chunk-FFZXZXWH.js','/build/_shared/chunk-KW6WLGT6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/navbar':{'id':'routes/navbar','parentId':'root','path':'navbar','index':undefined,'caseSensitive':undefined,'module':'/build/routes/navbar-FO7LBMN3.js','imports':['/build/_shared/chunk-CCWRKC7U.js','/build/_shared/chunk-FFZXZXWH.js','/build/_shared/chunk-KW6WLGT6.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes-5N46U5R5.js','imports':['/build/_shared/chunk-MECONK2F.js','/build/_shared/chunk-AC7UQQEL.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes.$noteId':{'id':'routes/notes.$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes.$noteId-XOGPWVC6.js','imports':['/build/_shared/chunk-5B6WUN7S.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/notes._index':{'id':'routes/notes._index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/notes._index-WAYJKSXV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes.new':{'id':'routes/notes.new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes.new-YOBJJLD5.js','imports':['/build/_shared/chunk-5B6WUN7S.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/root':{'id':'routes/root','parentId':'root','path':'root','index':undefined,'caseSensitive':undefined,'module':'/build/routes/root-EZRNH4KT.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/successemail':{'id':'routes/successemail','parentId':'root','path':'successemail','index':undefined,'caseSensitive':undefined,'module':'/build/routes/successemail-7BCDQ57J.js','imports':['/build/_shared/chunk-DRB32KNV.js','/build/_shared/chunk-S3N74YNX.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/venda':{'id':'routes/venda','parentId':'root','path':'venda','index':undefined,'caseSensitive':undefined,'module':'/build/routes/venda-APSWMAFP.js','imports':['/build/_shared/chunk-FFZXZXWH.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-DAF88DD0.js'};", "/**\n * @remix-run/css-bundle v1.16.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar assetsManifest = require('@remix-run/dev/assets-manifest');\n\nfunction _interopDefaultLegacy(e) {return e && typeof e === 'object' && 'default' in e ? e : { 'default': e };}\n\nvar assetsManifest__default = /*#__PURE__*/_interopDefaultLegacy(assetsManifest);\n\nconst cssBundleHref = assetsManifest__default[\"default\"].cssBundleHref;\n\nexports.cssBundleHref = cssBundleHref;", "export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/docs/en/main/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction, LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\nLinks,\nLiveReload,\nMeta,\nOutlet,\nScripts,\nScrollRestoration } from\n\"@remix-run/react\";\n\nimport { getUser } from \"~/session.server\";\nimport stylesheet from \"~/tailwind.css\";\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet },\n...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : [])];\n\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  return json({ user: await getUser(request) });\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import type { Password, User } from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\";\n\nimport { prisma } from \"~/db.server\";\n\nexport type { User } from \"@prisma/client\";\n\nexport async function getUserById(id: User[\"id\"]) {\n  return prisma.user.findUnique({ where: { id } });\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return prisma.user.findUnique({ where: { email } });\n}\n\nexport async function createUser(email: User[\"email\"], password: string) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n\n  return prisma.user.create({\n    data: {\n      email,\n      password: {\n        create: {\n          hash: hashedPassword,\n        },\n      },\n    },\n  });\n}\n\nexport async function deleteUserByEmail(email: User[\"email\"]) {\n  return prisma.user.delete({ where: { email } });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"hash\"]\n) {\n  const userWithPassword = await prisma.user.findUnique({\n    where: { email },\n    include: {\n      password: true,\n    },\n  });\n\n  if (!userWithPassword || !userWithPassword.password) {\n    return null;\n  }\n\n  const isValid = await bcrypt.compare(\n    password,\n    userWithPassword.password.hash\n  );\n\n  if (!isValid) {\n    return null;\n  }\n\n  const { password: _password, ...userWithoutPassword } = userWithPassword;\n\n  return userWithoutPassword;\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient | undefined;\n}\n\n// This is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// In production, we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };\n", "import { LoaderFunction } from \"@remix-run/node\"\nimport { useLoaderData } from \"@remix-run/react\";\nimport { prisma } from \"~/db.server\";\nimport Navbar from \"./navbar\";\n\nexport let loader: LoaderFunction = async({ request }) => { \n  const url = new URL(request.url);\n    const queryParams = url.searchParams;\n\n    const email = queryParams.get('email') as string;\n    const password = queryParams.get('password') as string;\n\n      \n\n   \n\n    return{sucess:true}\n\n}\n\nexport default function Example() {\n    return (\n      <>\n        {/*\n          This example requires updating your template:\n  \n          \n          <html class=\"h-full bg-white\">\n          <body class=\"h-full\">\n          \n        */}\n        <Navbar/>\n\n        <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n          <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n            <img\n              className=\"mx-auto h-10 w-auto\"\n              src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n              alt=\"Your Company\"\n            />\n            <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n              Cadastro Rem\u00E9dio\n            </h2>\n          </div>\n  \n          <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n            <form className=\"space-y-6\" action=\"#\" method=\"get\">\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Nome Rem\u00E9dio\n                </label>\n                <div className=\"mt-2\">\n                  <input name=\"email\" type=\"text\" className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Pre\u00E7o\n                </label>\n                <div className=\"mt-2\">\n                  <input name=\"password\" type=\"text\" className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              \n  \n              <div>\n                \n              </div>\n  \n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                >\n                  Salvar\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </>\n    )\n  }", "export let action: ActionFunction = async({ request }) => { \n  const formData = await request.formData();\n\n  const name = formData.get(\"name\") as string;\n  const date = formData.get(\"date\") as string;\n  const time = formData.get(\"time\") as string;\n  \n  console.log(date, time);\n  \n  await prisma.scheduling.create({\n    data: {\n      name:name,\n      datetime: new Date(`${date} ${time}`),\n    }\n  })\n\n  return {}\n}\n\nimport { Fragment } from 'react'\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { Bars3Icon, BellIcon, XMarkIcon } from '@heroicons/react/24/outline'\nimport { ActionFunction, LoaderFunction } from '@remix-run/node'\nimport { prisma } from '~/db.server';\n\nconst user = {\n  name: 'Tom Cook',\n  email: 'tom@example.com',\n  imageUrl:\n    'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\n}\nconst navigation = [\n  { name: 'Agendar agora', href: '#', current: true },\n  { name: 'Team', href: '#', current: false },\n  { name: 'Meus Agendamentos', href: '#', current: false },\n  { name: 'Calendar', href: '#', current: false },\n]\nconst userNavigation = [\n  { name: 'Your Profile', href: '#' },\n  { name: 'Settings', href: '#' },\n  { name: 'Sign out', href: '#' },\n]\n\nfunction classNames(...classes: any) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Navbar() {\n  return (\n    <>\n      {/*\n        This example requires updating your template:\n\n        ```\n        <html class=\"h-full\">\n        <body class=\"h-full\">\n        ```\n      */}\n      <div className=\"min-h-full\">\n        <Disclosure as=\"nav\" className=\"border-b border-gray-200 bg-white\">\n          {({ open }) => (\n            <>\n              <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n                <div className=\"flex h-16 justify-between\">\n                  <div className=\"flex\">\n                    <div className=\"flex flex-shrink-0 items-center\">\n                      <img\n                        className=\"block h-8 w-auto lg:hidden\"\n                        src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n                        alt=\"Your Company\"\n                      />\n                      <img\n                        className=\"hidden h-8 w-auto lg:block\"\n                        src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n                        alt=\"Your Company\"\n                      />\n                    </div>\n                    <div className=\"hidden sm:-my-px sm:ml-6 sm:flex sm:space-x-8\">\n                      {navigation.map((item) => (\n                        <a\n                          key={item.name}\n                          href={item.href}\n                          className={classNames(\n                            item.current\n                              ? 'border-indigo-500 text-gray-900'\n                              : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700',\n                            'inline-flex items-center border-b-2 px-1 pt-1 text-sm font-medium'\n                          )}\n                          aria-current={item.current ? 'page' : undefined}\n                        >\n                          {item.name}\n                        </a>\n                      ))}\n                    </div>\n                  </div>\n                  <div className=\"hidden sm:ml-6 sm:flex sm:items-center\">\n                    <button\n                      type=\"button\"\n                      className=\"rounded-full bg-white p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                    >\n                      <span className=\"sr-only\">View notifications</span>\n                      <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                    </button>\n\n                    {/* Profile dropdown */}\n                    <Menu as=\"div\" className=\"relative ml-3\">\n                      <div>\n                        <Menu.Button className=\"flex max-w-xs items-center rounded-full bg-white text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">\n                          <span className=\"sr-only\">Open user menu</span>\n                          <img className=\"h-8 w-8 rounded-full\" src={user.imageUrl} alt=\"\" />\n                        </Menu.Button>\n                      </div>\n                      <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-200\"\n                        enterFrom=\"transform opacity-0 scale-95\"\n                        enterTo=\"transform opacity-100 scale-100\"\n                        leave=\"transition ease-in duration-75\"\n                        leaveFrom=\"transform opacity-100 scale-100\"\n                        leaveTo=\"transform opacity-0 scale-95\"\n                      >\n                        <Menu.Items className=\"absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                          {userNavigation.map((item) => (\n                            <Menu.Item key={item.name}>\n                              {({ active }) => (\n                                <a\n                                  href={item.href}\n                                  className={classNames(\n                                    active ? 'bg-gray-100' : '',\n                                    'block px-4 py-2 text-sm text-gray-700'\n                                  )}\n                                >\n                                  {item.name}\n                                </a>\n                              )}\n                            </Menu.Item>\n                          ))}\n                        </Menu.Items>\n                      </Transition>\n                    </Menu>\n                  </div>\n                  <div className=\"-mr-2 flex items-center sm:hidden\">\n                    {/* Mobile menu button */}\n                    <Disclosure.Button className=\"inline-flex items-center justify-center rounded-md bg-white p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">\n                      <span className=\"sr-only\">Open main menu</span>\n                      {open ? (\n                        <XMarkIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                      ) : (\n                        <Bars3Icon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                      )}\n                    </Disclosure.Button>\n                  </div>\n                </div>\n              </div>\n\n              <Disclosure.Panel className=\"sm:hidden\">\n                <div className=\"space-y-1 pb-3 pt-2\">\n                  {navigation.map((item) => (\n                    <Disclosure.Button\n                      key={item.name}\n                      as=\"a\"\n                      href={item.href}\n                      className={classNames(\n                        item.current\n                          ? 'border-indigo-500 bg-indigo-50 text-indigo-700'\n                          : 'border-transparent text-gray-600 hover:border-gray-300 hover:bg-gray-50 hover:text-gray-800',\n                        'block border-l-4 py-2 pl-3 pr-4 text-base font-medium'\n                      )}\n                      aria-current={item.current ? 'page' : undefined}\n                    >\n                      {item.name}\n                    </Disclosure.Button>\n                  ))}\n                </div>\n                <div className=\"border-t border-gray-200 pb-3 pt-4\">\n                  <div className=\"flex items-center px-4\">\n                    <div className=\"flex-shrink-0\">\n                      <img className=\"h-10 w-10 rounded-full\" src={user.imageUrl} alt=\"\" />\n                    </div>\n                    <div className=\"ml-3\">\n                      <div className=\"text-base font-medium text-gray-800\">{user.name}</div>\n                      <div className=\"text-sm font-medium text-gray-500\">{user.email}</div>\n                    </div>\n                    <button\n                      type=\"button\"\n                      className=\"ml-auto flex-shrink-0 rounded-full bg-white p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                    >\n                      <span className=\"sr-only\">View notifications</span>\n                      <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                  <div className=\"mt-3 space-y-1\">\n                    {userNavigation.map((item) => (\n                      <Disclosure.Button\n                        key={item.name}\n                        as=\"a\"\n                        href={item.href}\n                        className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-800\"\n                      >\n                        {item.name}\n                      </Disclosure.Button>\n                    ))}\n                  </div>\n                </div>\n              </Disclosure.Panel>\n            </>\n          )}\n        </Disclosure>\n\n        <div className=\"py-10\">\n          <header>\n            <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n              <h1 className=\"text-3xl font-bold leading-tight tracking-tight text-gray-900\">Fa\u00E7a seu agendamento aqui</h1>\n            </div>\n          </header>\n          <main>\n            <form action=\"\" method=\"post\">\n            <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-5\"><div className=\"sm:col-span-3\">\n              <label htmlFor=\"last-name\" className=\"block text-sm font-medium leading-6 text-gray-900 pt-8\">\n                Nome : \n              </label>\n              \n              <div className=\"mt-2\">\n                <input\n                  type=\"text\"\n                  placeholder='Digite seu nome'\n                  name=\"name\"\n                  id=\"last-name\"\n                  autoComplete=\"family-name\"\n                  className=\"block w-1/2 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6\"\n                />\n                \n              </div>\n              <label htmlFor=\"last-name\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Dia :\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  type=\"date\"\n                  name=\"date\"\n                  id=\"last-name\"\n                  autoComplete=\"family-name\"\n                  className=\"block w- rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6\"\n                />\n              </div>\n              <label htmlFor=\"last-name\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Hora : \n              </label>\n              <div className=\"mt-2\">\n\n                <select \n                  name=\"time\" \n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6\"\n                >\n                  {\n                    [\n                     '08:00',\n                     '09:00',\n                     '10:00',\n                     '11:00',\n                     '12:00',\n                     '13:00',\n                     '14:00',\n                     '15:00',\n                     '16:00',\n                     '17:00',\n                     '18:00',\n                     '19:00',\n                     '20:00',\n                     '21:00',\n                     '22:00',\n                     '23:00'\n                    ].map((time)=>\n                    <option value={time}>\n                      {time}\n                    </option>\n                  )}\n                </select>\n                \n{/*                 \n                <input\n                  type=\"time\"\n                  name=\"time\"\n                  id=\"last-name\"\n                  step=\"3600\"\n                  autoComplete=\"family-name\"\n                  className=\"block w- rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6\"\n                /> */}\n              </div>\n              <div className='pt-4' >\n              <button\n                type=\"submit\"\n                className=\"flex w-1/2 justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n              >\n                Agendar\n              </button>\n              </div>\n            </div></div>\n            </form>\n            \n          </main>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import {createCookie} from '@remix-run/node'\n\nexport const tosBannerCookie = createCookie('tos-banner', {\n    maxAge: 31_536_000,\n});", "import { XCircleIcon } from \"@heroicons/react/20/solid\";\n\nexport default function ErrorPassword(){\n  return(\n    <div className=\"rounded-md bg-red-50 p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800\">Senhas digitadas diferentes, tente novamente</h3>\n\n        </div>\n      </div>\n    </div>\n  )\n}", "import { LoaderFunction } from \"@remix-run/node\"\nimport { useLoaderData } from \"@remix-run/react\";\nimport { prisma } from \"~/db.server\";\nimport Navbar from \"./navbar\";\n\nexport let loader: LoaderFunction = async({ request }) => { \n  const url = new URL(request.url);\n    const queryParams = url.searchParams;\n\n    const nome_cliente = queryParams.get('nome_cliente');\n    const cpf = queryParams.get('cpf');\n    const endereco = queryParams.get('endereco');\n    const telefone = queryParams.get('telefone');\n\n    if(!nome_cliente){\n        return{error:'N\u00E3o foi fornecido um nome'}\n    }\n\n    if(!cpf){\n        return{error:'N\u00E3o foi fornecido uma idade'}\n    }\n\n    if(!endereco){\n        return{error:'N\u00E3o foi fornecido um nome'}\n    }\n\n    if(!telefone){\n        return{error:'N\u00E3o foi fornecido um nome'}\n    }\n\n    await prisma.cliente.create({\n        data: {\n          nome:nome_cliente,\n          cpf:cpf,\n          endereco:endereco,\n          telefone:telefone\n          \n        }\n      })\n\n      \n\n   \n\n    return{sucess:true}\n\n}\n\nexport default function Example() {\n    return (\n      \n      \n      \n      <>\n        {/*\n          This example requires updating your template:\n  \n          \n          <html class=\"h-full bg-white\">\n          <body class=\"h-full\">\n          \n        */}\n\n        <Navbar/>\n        <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n          <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n            <img\n              className=\"mx-auto h-10 w-auto\"\n              src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n              alt=\"Your Company\"\n            />\n            <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n              Cadastro Cliente\n            </h2>\n          </div>\n  \n          <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n            <form className=\"space-y-6\" action=\"#\" method=\"get\">\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Nome Cliente\n                </label>\n                <div className=\"mt-2\">\n                  <input name=\"nome_cliente\" type=\"text\" className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  CPF\n                </label>\n                <div className=\"mt-2\">\n                  <input name=\"cpf\" type=\"text\" className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              \n  \n              <div>\n                <div className=\"flex items-center justify-between\">\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                    Endere\u00E7o\n                  </label>\n                </div>\n                <div className=\"mt-2\">\n                  <input name=\"endereco\" type=\"text\" className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Telefone\n                </label>\n                <div className=\"mt-2\">\n                  <input name=\"telefone\" type=\"text\" className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n  \n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                >\n                  Cadastrar\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </>\n    )\n  }", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {\n  Form,\n  isRouteErrorResponse,\n  useLoaderData,\n  useRouteError,\n} from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport { deleteNote, getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nexport const loader = async ({ params, request }: LoaderArgs) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ id: params.noteId, userId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json({ note });\n};\n\nexport const action = async ({ params, request }: ActionArgs) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ id: params.noteId, userId });\n\n  return redirect(\"/notes\");\n};\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div>\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\n      <p className=\"py-6\">{data.note.body}</p>\n      <hr className=\"my-4\" />\n      <Form method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Delete\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport function ErrorBoundary() {\n  const error = useRouteError();\n\n  if (error instanceof Error) {\n    return <div>An unexpected error occurred: {error.message}</div>;\n  }\n\n  if (!isRouteErrorResponse(error)) {\n    return <h1>Unknown Error</h1>;\n  }\n\n  if (error.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  return <div>An unexpected error occurred: {error.statusText}</div>;\n}\n", "import type { User, Note } from \"@prisma/client\";\n\nimport { prisma } from \"~/db.server\";\n\nexport function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\"> & {\n  userId: User[\"id\"];\n}) {\n  return prisma.note.findFirst({\n    select: { id: true, body: true, title: true },\n    where: { id, userId },\n  });\n}\n\nexport function getNoteListItems({ userId }: { userId: User[\"id\"] }) {\n  return prisma.note.findMany({\n    where: { userId },\n    select: { id: true, title: true },\n    orderBy: { updatedAt: \"desc\" },\n  });\n}\n\nexport function createNote({\n  body,\n  title,\n  userId,\n}: Pick<Note, \"body\" | \"title\"> & {\n  userId: User[\"id\"];\n}) {\n  return prisma.note.create({\n    data: {\n      title,\n      body,\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n    },\n  });\n}\n\nexport function deleteNote({\n  id,\n  userId,\n}: Pick<Note, \"id\"> & { userId: User[\"id\"] }) {\n  return prisma.note.deleteMany({\n    where: { id, userId },\n  });\n}\n", "import { ActionFunction, LoaderFunction } from \"@remix-run/node\"\nimport { useActionData } from \"@remix-run/react\";\nimport { prisma } from \"~/db.server\";\nimport ErrorEmail from \"./emailerror\";\nimport SuccessfullyEmail from \"./successemail\";\nimport ErrorPassword from \"./errorpassword\";\n\nexport let action: ActionFunction = async({ request }) => { \n    const formData = await request.formData();\n\n    const name = formData.get(\"name\") as string;\n    const address = formData.get(\"address\") as string;\n    const email = formData.get(\"email\") as string;\n    const password = formData.get(\"password\") as string;\n    const password2 = formData.get(\"password2\") as string;\n\n    const databaseResult = await prisma.user.findFirst({\n      where:{\n        email\n      }\n    })\n\n    if(databaseResult){\n      return{\n        error:'email j\u00E1 cadastrado',\n      }\n    }\n\n    if(password !== password2){\n      console.log('senhas diferentes');\n      return{\n        password_error:'senhas diferentes'\n      }\n    }\n      \n    const cria = await prisma.user.create({\n        data: {\n         name:name,\n         address:address,\n         email:email,\n         password:password\n        }\n      })\n    \n      console.log(cria)\n    \n    \n\n    return {success:'email cadastrado com sucesso'}\n}\n\n\nexport default function CreateAcount() {\n    \n  const data = useActionData<typeof action>();\n\n  return (\n      <>\n        <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n          <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n            <img\n              className=\"mx-auto h-10 w-auto\"\n              src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n              alt=\"Your Company\"\n            />\n            <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n              Fa\u00E7a seu cadastro\n            </h2>\n          </div>\n  \n          <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n            <form className=\"space-y-6\" action=\"\" method=\"post\">\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Nome Completo\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    id=\"email\"\n                    placeholder=\"Digite seu nome aqui\"\n                    name=\"name\"\n                    type=\"text\"\n                    autoComplete=\"email\"\n                    required\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Endere\u00E7o\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    id=\"email\"\n                    placeholder=\"rua, n\u00FAmero da casa e bairro\"\n                    name=\"address\"\n                    type=\"text\"\n                    autoComplete=\"email\"\n                    required\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n                \n                <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900 \">\n                  Email\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    id=\"email\"\n                    placeholder=\"Digite um email v\u00E1lido\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    required\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n                \n              </div>\n  \n              <div>\n                <div className=\"flex items-center justify-between\">\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                    Senha\n                  </label>\n                </div>\n                <div className=\"mt-2\">\n                  <input\n                    id=\"password\"\n                    placeholder=\"Digite sua senha\"\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    required\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900 \">\n                  Confirme sua senha\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    id=\"email\"\n                    placeholder=\"Digite a senha novamente\"\n                    name=\"password2\"\n                    type=\"password\"\n                    autoComplete=\"email\"\n                    required\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n  \n              <div>\n                \n                <button\n                  type=\"submit\"\n                  className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                >\n                  Cadastrar\n                </button>\n              {data?.error ? <ErrorEmail /> : ''}\n              {data?.success ? <SuccessfullyEmail /> : ''}\n              {data?.password_error? <ErrorPassword /> : ''}\n              </div>\n            </form>\n  \n            <p className=\"mt-10 text-center text-sm text-gray-500\">\n              Voc\u00EA j\u00E1 tem uma conta?{' '}\n              <a href=\"/login\" className=\"font-semibold leading-6 text-indigo-600 hover:text-indigo-500\">\n                J\u00E1 tenho uma conta\n              </a>\n            </p>\n          </div>\n        </div>\n      </>\n    )\n  }\n  ", "import { XCircleIcon } from \"@heroicons/react/20/solid\";\nimport React from \"react\";\n\nexport default function ErrorEmail(){\n  return(\n    <div className=\"rounded-md bg-red-50 p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800\">Email j\u00E1 cadastrado</h3>\n\n        </div>\n      </div>\n    </div>\n  )\n}", "import { CheckCircleIcon, XMarkIcon } from '@heroicons/react/20/solid'\n\nexport default function SuccessfullyEmail() {\n  return (\n    <div className=\"rounded-md bg-green-50 p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <CheckCircleIcon className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"ml-3\">\n          <p className=\"text-sm font-medium text-green-800\">Email cadastrado com sucesso</p>\n        </div>\n        <div className=\"ml-auto pl-3\">\n          <div className=\"-mx-1.5 -my-1.5\">\n              <span className=\"sr-only\">Dismiss</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function NoteIndexPage() {\n  return (\n    <p>\n      No note selected. Select a note on the left, or{\" \"}\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        create a new note.\n      </Link>\n    </p>\n  );\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\n\nimport { createNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nexport const action = async ({ request }: ActionArgs) => {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json(\n      { errors: { body: null, title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json(\n      { errors: { body: \"Body is required\", title: null } },\n      { status: 400 }\n    );\n  }\n\n  const note = await createNote({ body, title, userId });\n\n  return redirect(`/notes/${note.id}`);\n};\n\nexport default function NewNotePage() {\n  const actionData = useActionData<typeof action>();\n  const titleRef = useRef<HTMLInputElement>(null);\n  const bodyRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <Form\n      method=\"post\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 8,\n        width: \"100%\",\n      }}\n    >\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Title: </span>\n          <input\n            ref={titleRef}\n            name=\"title\"\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.title ? \"title-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.title ? (\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\n            {actionData.errors.title}\n          </div>\n        ) : null}\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Body: </span>\n          <textarea\n            ref={bodyRef}\n            name=\"body\"\n            rows={8}\n            className=\"w-full flex-1 rounded-md border-2 border-blue-500 px-3 py-2 text-lg leading-6\"\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.body ? \"body-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.body ? (\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\n            {actionData.errors.body}\n          </div>\n        ) : null}\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Save\n        </button>\n      </div>\n    </Form>\n  );\n}\n", "import { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { LoaderArgs, json } from \"@remix-run/server-runtime\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport { prisma } from \"~/db.server\";\nimport { isRedirectResponse } from \"@remix-run/react/dist/data\";\nimport { redirect } from \"@remix-run/node\";\nimport { XCircleIcon } from \"@heroicons/react/20/solid\";\nimport ErrorMessage from \"./erro\";\nimport { useState } from \"react\";\nimport Navbar from \"./navbar\";\nimport styles from '~/styles.css';\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }];\n}\n\n// export let loader: LoaderFunction = async({ request }) => {\n//     return{'user': await prisma.user.findMany()}\n// }\n\nexport let action: ActionFunction = async ({ request }) => {\n  //aqui ele est\u00E1 pegando todas as informac\u00F5es do formul\u00E1rio\n  const formData = await request.formData();\n\n  const user = (formData.get(\"email\") as string);\n  const password = (formData.get(\"password\") as string);\n\n  //aqui \u00E9 feita a busca no banco de dados pra ver se tem o usu\u00E1rio no banco de dados\n  const usuarioEncontrado = await prisma.user.findFirst({\n    where: {\n      email: user,\n      password: password\n    }\n  });\n\n  console.log(usuarioEncontrado);\n\n  //Aqui \u00E9 feita a valida\u00E7\u00E3o, se o usu\u00E1rio for encontrado no banco ele vai conectar, se n\u00E3o for encontrado vai retornar a menagem 'Usu\u00E1rio ou senha incorretos'.\n  if (usuarioEncontrado) {\n    console.log('usu\u00E1rio encontrado', usuarioEncontrado);\n    return redirect(\"/venda\");\n  } else {\n    console.log('usu\u00E1rio n\u00E3o encontrado');\n    return {\n      error: 'Usu\u00E1rio ou senha incorretos'\n    };\n  }\n\n\n};\n\nexport default function Example() {\n\n  //  const _data = useLoaderData<typeof loader>();\n  const data = useActionData<typeof action>();\n\n  return (\n    <>\n      {JSON.stringify(data)}\n      <div className=\"exemplo\">\n        oiii\n      </div>\n      <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n          <img\n          className=\"mx-auto h-10 w-auto\"\n          src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n          alt=\"Your Company\" />\n\n          <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n            Acessar sistema\n          </h2>\n        </div>\n\n        <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n          <Form className=\"space-y-6\" action=\"\" method=\"POST\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Usu\u00E1rio\n              </label>\n              <div className=\"mt-2\">\n                <input\n                id=\"email\"\n                name=\"email\"\n                type=\"name\"\n                autoComplete=\"email\"\n                required\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n\n              </div>\n            </div>\n\n            <div>\n              <div className=\"flex items-center justify-between\">\n                <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Senha\n                </label>\n                <div className=\"text-sm\">\n                </div>\n              </div>\n              <div className=\"mt-2\">\n                <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                required\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n\n              </div>\n            </div>\n\n            <div>\n              <button\n              type=\"submit\"\n              className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">\n\n                Entrar\n              </button>\n\n              {data?.error ? <ErrorMessage /> : ''}\n\n              {data?.success && <div>\n                Eba, loguei\n              </div>}\n\n              {/* {JSON.stringify(data?.error)} */}\n\n            </div>\n          </Form>\n        </div>\n      </div>\n    </>);\n\n}", "// import { Fragment } from 'react'\n// import { Disclosure, Menu, Transition } from '@headlessui/react'\n// import { Bars3Icon, BellIcon, XMarkIcon } from '@heroicons/react/24/outline'\n\n// const user = {\n//   name: 'Tom Cook',\n//   email: 'tom@example.com',\n//   imageUrl:\n//     'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\n// }\n// const navigation = [\n//   { name: 'Dashboard', href: '#', current: true },\n//   { name: 'Team', href: '#', current: false },\n//   { name: 'Projects', href: '#', current: false },\n//   { name: 'Calendar', href: '#', current: false },\n// ]\n// const userNavigation = [\n//   { name: 'Your Profile', href: '#' },\n//   { name: 'Settings', href: '#' },\n//   { name: 'Sign out', href: '#' },\n// ]\n\n// function classNames(...classes) {\n//   return classes.filter(Boolean).join(' ')\n// }\n\n// export default function Example() {\n//   return (\n//     <>\n//       {/*\n//         This example requires updating your template:\n\n//         ```\n//         <html class=\"h-full\">\n//         <body class=\"h-full\">\n//         ```\n//       */}\n//       <div className=\"min-h-full\">\n//         <Disclosure as=\"nav\" className=\"border-b border-gray-200 bg-white\">\n//           {({ open }) => (\n//             <>\n//               <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n//                 <div className=\"flex h-16 justify-between\">\n//                   <div className=\"flex\">\n//                     <div className=\"flex flex-shrink-0 items-center\">\n//                       <img\n//                         className=\"block h-8 w-auto lg:hidden\"\n//                         src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n//                         alt=\"Your Company\"\n//                       />\n//                       <img\n//                         className=\"hidden h-8 w-auto lg:block\"\n//                         src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n//                         alt=\"Your Company\"\n//                       />\n//                     </div>\n//                     <div className=\"hidden sm:-my-px sm:ml-6 sm:flex sm:space-x-8\">\n//                       {navigation.map((item) => (\n//                         <a\n//                           key={item.name}\n//                           href={item.href}\n//                           className={classNames(\n//                             item.current\n//                               ? 'border-indigo-500 text-gray-900'\n//                               : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700',\n//                             'inline-flex items-center border-b-2 px-1 pt-1 text-sm font-medium'\n//                           )}\n//                           aria-current={item.current ? 'page' : undefined}\n//                         >\n//                           {item.name}\n//                         </a>\n//                       ))}\n//                     </div>\n//                   </div>\n//                   <div className=\"hidden sm:ml-6 sm:flex sm:items-center\">\n//                     <button\n//                       type=\"button\"\n//                       className=\"rounded-full bg-white p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n//                     >\n//                       <span className=\"sr-only\">View notifications</span>\n//                       <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n//                     </button>\n\n//                     {/* Profile dropdown */}\n//                     <Menu as=\"div\" className=\"relative ml-3\">\n//                       <div>\n//                         <Menu.Button className=\"flex max-w-xs items-center rounded-full bg-white text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">\n//                           <span className=\"sr-only\">Open user menu</span>\n//                           <img className=\"h-8 w-8 rounded-full\" src={user.imageUrl} alt=\"\" />\n//                         </Menu.Button>\n//                       </div>\n//                       <Transition\n//                         as={Fragment}\n//                         enter=\"transition ease-out duration-200\"\n//                         enterFrom=\"transform opacity-0 scale-95\"\n//                         enterTo=\"transform opacity-100 scale-100\"\n//                         leave=\"transition ease-in duration-75\"\n//                         leaveFrom=\"transform opacity-100 scale-100\"\n//                         leaveTo=\"transform opacity-0 scale-95\"\n//                       >\n//                         <Menu.Items className=\"absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n//                           {userNavigation.map((item) => (\n//                             <Menu.Item key={item.name}>\n//                               {({ active }) => (\n//                                 <a\n//                                   href={item.href}\n//                                   className={classNames(\n//                                     active ? 'bg-gray-100' : '',\n//                                     'block px-4 py-2 text-sm text-gray-700'\n//                                   )}\n//                                 >\n//                                   {item.name}\n//                                 </a>\n//                               )}\n//                             </Menu.Item>\n//                           ))}\n//                         </Menu.Items>\n//                       </Transition>\n//                     </Menu>\n//                   </div>\n//                   <div className=\"-mr-2 flex items-center sm:hidden\">\n//                     {/* Mobile menu button */}\n//                     <Disclosure.Button className=\"inline-flex items-center justify-center rounded-md bg-white p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">\n//                       <span className=\"sr-only\">Open main menu</span>\n//                       {open ? (\n//                         <XMarkIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n//                       ) : (\n//                         <Bars3Icon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n//                       )}\n//                     </Disclosure.Button>\n//                   </div>\n//                 </div>\n//               </div>\n\n//               <Disclosure.Panel className=\"sm:hidden\">\n//                 <div className=\"space-y-1 pb-3 pt-2\">\n//                   {navigation.map((item) => (\n//                     <Disclosure.Button\n//                       key={item.name}\n//                       as=\"a\"\n//                       href={item.href}\n//                       className={classNames(\n//                         item.current\n//                           ? 'border-indigo-500 bg-indigo-50 text-indigo-700'\n//                           : 'border-transparent text-gray-600 hover:border-gray-300 hover:bg-gray-50 hover:text-gray-800',\n//                         'block border-l-4 py-2 pl-3 pr-4 text-base font-medium'\n//                       )}\n//                       aria-current={item.current ? 'page' : undefined}\n//                     >\n//                       {item.name}\n//                     </Disclosure.Button>\n//                   ))}\n//                 </div>\n//                 <div className=\"border-t border-gray-200 pb-3 pt-4\">\n//                   <div className=\"flex items-center px-4\">\n//                     <div className=\"flex-shrink-0\">\n//                       <img className=\"h-10 w-10 rounded-full\" src={user.imageUrl} alt=\"\" />\n//                     </div>\n//                     <div className=\"ml-3\">\n//                       <div className=\"text-base font-medium text-gray-800\">{user.name}</div>\n//                       <div className=\"text-sm font-medium text-gray-500\">{user.email}</div>\n//                     </div>\n//                     <button\n//                       type=\"button\"\n//                       className=\"ml-auto flex-shrink-0 rounded-full bg-white p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n//                     >\n//                       <span className=\"sr-only\">View notifications</span>\n//                       <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n//                     </button>\n//                   </div>\n//                   <div className=\"mt-3 space-y-1\">\n//                     {userNavigation.map((item) => (\n//                       <Disclosure.Button\n//                         key={item.name}\n//                         as=\"a\"\n//                         href={item.href}\n//                         className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-800\"\n//                       >\n//                         {item.name}\n//                       </Disclosure.Button>\n//                     ))}\n//                   </div>\n//                 </div>\n//               </Disclosure.Panel>\n//             </>\n//           )}\n//         </Disclosure>\n\n//         <div className=\"py-10\">\n//           <header>\n//             <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n//               <h1 className=\"text-3xl font-bold leading-tight tracking-tight text-gray-900\">Dashboard</h1>\n//             </div>\n//           </header>\n//           <main>\n//             <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">{/* Your content */}</div>\n//           </main>\n//         </div>\n//       </div>\n//     </>\n//   )\n// }\n\n\n\nimport { XCircleIcon } from \"@heroicons/react/20/solid\";\nimport React from \"react\";\n\nexport default function ErrorMessage(){\n  return(\n    <div className=\"rounded-md bg-red-50 p-4\">\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800\">Usu\u00E1rio ou senha incorretos</h3>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n\n", "import Navbar from \"./navbar\";\n\n<Navbar />", "import { ActionFunction, redirect } from \"@remix-run/node\"\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { log } from \"console\";\nimport { prisma } from \"~/db.server\";\nimport ErrorMessage from \"./erro\";\n\nexport let action: ActionFunction = async({ request }) => { \n  const formData = await request.formData();\n\n  const email = formData.get(\"email\") as string;\n  const password = formData.get(\"password\") as string;\n \n\n//AQUI EST\u00C1 SENDO FEITO A VALIDAC\u00C3O DO USU\u00C1RIO, SE A SENHA EST\u00C1 CERTA OU N\u00C3O.\n  const userfound = await prisma.user.findFirst({\n    where: {\n      email:email,\n      password:password\n    }\n  })\n\n\n  //AQUI \u00C9 FEITO O CAMINHO, CASO A O USU\u00C1RIO SEJA ENCONTRADO ELE VAI ENTRAR NO SITE, CASO N\u00C3O SEJA ENCONRTRADO VAI RETORNAR A MENSAGEM DE erro:'Email ou senha inv\u00E1lidos'\n  if (userfound){\n    return redirect(\"/navbar\");\n  }else{\n    console.log('N\u00E3o encontrado');\n    return{\n      erro:'N\u00E3o foi encontrado'\n    }\n  }\n\n}\n\nexport default function Login() {\n  \n\n  //AQUI ELE VAI ESTAR PEGANDO O QUE VAI RETORNAR A FUN\u00C7\u00C3O action.\n  const data = useActionData<typeof action>();\n  \n\n  return (\n    <>\n\n      <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n          <img\n            className=\"mx-auto h-10 w-auto\"\n            src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n            alt=\"Your Company\"\n          />\n          <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n            Login\n          </h2>\n        </div>\n\n        <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n          <form className=\"space-y-6\" action=\"#\" method=\"POST\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Email\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <div className=\"flex items-center justify-between\">\n                <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Senha\n                </label>\n                {/* <div className=\"text-sm\">\n                  <a href=\"#\" className=\"font-semibold text-indigo-600 hover:text-indigo-500\">\n                    Forgot password?\n                  </a>\n                </div> */}\n              </div>\n              <div className=\"mt-2\">\n                <input\n                  id=\"password\"\n                  placeholder=\"Senha\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n              >\n                Entrar\n              </button>\n              {data?.erro ? <ErrorMessage /> : ''}\n            </div>\n          </form>\n\n          <p className=\"mt-10 text-center text-sm text-gray-500\">\n            N\u00E3o tem uma conta? Crie agora a sua.{' '}\n            <a href=\"/createacount\" className=\"font-semibold leading-6 text-indigo-600 hover:text-indigo-500\">\n              Criar conta\n            </a>\n          </p>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { getNoteListItems } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  return json({ noteListItems });\n};\n\nexport default function NotesPage() {\n  const data = useLoaderData<typeof loader>();\n  const user = useUser();\n\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Notes</Link>\n        </h1>\n        <p>{user.email}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-slate-600 px-4 py-2 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n          >\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full w-80 border-r bg-gray-50\">\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\n            + New Note\n          </Link>\n\n          <hr />\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-4\">No notes yet</p>\n          ) : (\n            <ol>\n              {data.noteListItems.map((note) => (\n                <li key={note.id}>\n                  <NavLink\n                    className={({ isActive }) =>\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\n                    }\n                    to={note.id}\n                  >\n                    \uD83D\uDCDD {note.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import { Fragment } from 'react'\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { Bars3Icon, BellIcon, XMarkIcon } from '@heroicons/react/24/outline'\n\nconst user = {\n  name: 'Tom Cook',\n  email: 'tom@example.com',\n  imageUrl:\n    'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\n}\nconst navigation = [\n  { name: 'Dashboard', href: '#', current: true },\n  { name: 'Team', href: '#', current: false },\n  { name: 'Projects', href: '#', current: false },\n  { name: 'Calendar', href: '#', current: false },\n]\nconst userNavigation = [\n  { name: 'Your Profile', href: '#' },\n  { name: 'Settings', href: '#' },\n  { name: 'Sign out', href: '#' },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Example() {\n  return (\n    <>\n      {/*\n        This example requires updating your template:\n\n        ```\n        <html class=\"h-full\">\n        <body class=\"h-full\">\n        ```\n      */}\n      <div className=\"min-h-full\">\n        <Disclosure as=\"nav\" className=\"border-b border-gray-200 bg-white\">\n          {({ open }) => (\n            <>\n              <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n                <div className=\"flex h-16 justify-between\">\n                  <div className=\"flex\">\n                    <div className=\"flex flex-shrink-0 items-center\">\n                      <img\n                        className=\"block h-8 w-auto lg:hidden\"\n                        src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n                        alt=\"Your Company\"\n                      />\n                      <img\n                        className=\"hidden h-8 w-auto lg:block\"\n                        src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n                        alt=\"Your Company\"\n                      />\n                    </div>\n                    <div className=\"hidden sm:-my-px sm:ml-6 sm:flex sm:space-x-8\">\n                      {navigation.map((item) => (\n                        <a\n                          key={item.name}\n                          href={item.href}\n                          className={classNames(\n                            item.current\n                              ? 'border-indigo-500 text-gray-900'\n                              : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700',\n                            'inline-flex items-center border-b-2 px-1 pt-1 text-sm font-medium'\n                          )}\n                          aria-current={item.current ? 'page' : undefined}\n                        >\n                          {item.name}\n                        </a>\n                      ))}\n                    </div>\n                  </div>\n                  <div className=\"hidden sm:ml-6 sm:flex sm:items-center\">\n                    <button\n                      type=\"button\"\n                      className=\"rounded-full bg-white p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                    >\n                      <span className=\"sr-only\">View notifications</span>\n                      <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                    </button>\n\n                    {/* Profile dropdown */}\n                    <Menu as=\"div\" className=\"relative ml-3\">\n                      <div>\n                        <Menu.Button className=\"flex max-w-xs items-center rounded-full bg-white text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">\n                          <span className=\"sr-only\">Open user menu</span>\n                          <img className=\"h-8 w-8 rounded-full\" src={user.imageUrl} alt=\"\" />\n                        </Menu.Button>\n                      </div>\n                      <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-200\"\n                        enterFrom=\"transform opacity-0 scale-95\"\n                        enterTo=\"transform opacity-100 scale-100\"\n                        leave=\"transition ease-in duration-75\"\n                        leaveFrom=\"transform opacity-100 scale-100\"\n                        leaveTo=\"transform opacity-0 scale-95\"\n                      >\n                        <Menu.Items className=\"absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                          {userNavigation.map((item) => (\n                            <Menu.Item key={item.name}>\n                              {({ active }) => (\n                                <a\n                                  href={item.href}\n                                  className={classNames(\n                                    active ? 'bg-gray-100' : '',\n                                    'block px-4 py-2 text-sm text-gray-700'\n                                  )}\n                                >\n                                  {item.name}\n                                </a>\n                              )}\n                            </Menu.Item>\n                          ))}\n                        </Menu.Items>\n                      </Transition>\n                    </Menu>\n                  </div>\n                  <div className=\"-mr-2 flex items-center sm:hidden\">\n                    {/* Mobile menu button */}\n                    <Disclosure.Button className=\"inline-flex items-center justify-center rounded-md bg-white p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">\n                      <span className=\"sr-only\">Open main menu</span>\n                      {open ? (\n                        <XMarkIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                      ) : (\n                        <Bars3Icon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                      )}\n                    </Disclosure.Button>\n                  </div>\n                </div>\n              </div>\n\n              <Disclosure.Panel className=\"sm:hidden\">\n                <div className=\"space-y-1 pb-3 pt-2\">\n                  {navigation.map((item) => (\n                    <Disclosure.Button\n                      key={item.name}\n                      as=\"a\"\n                      href={item.href}\n                      className={classNames(\n                        item.current\n                          ? 'border-indigo-500 bg-indigo-50 text-indigo-700'\n                          : 'border-transparent text-gray-600 hover:border-gray-300 hover:bg-gray-50 hover:text-gray-800',\n                        'block border-l-4 py-2 pl-3 pr-4 text-base font-medium'\n                      )}\n                      aria-current={item.current ? 'page' : undefined}\n                    >\n                      {item.name}\n                    </Disclosure.Button>\n                  ))}\n                </div>\n                <div className=\"border-t border-gray-200 pb-3 pt-4\">\n                  <div className=\"flex items-center px-4\">\n                    <div className=\"flex-shrink-0\">\n                      <img className=\"h-10 w-10 rounded-full\" src={user.imageUrl} alt=\"\" />\n                    </div>\n                    <div className=\"ml-3\">\n                      <div className=\"text-base font-medium text-gray-800\">{user.name}</div>\n                      <div className=\"text-sm font-medium text-gray-500\">{user.email}</div>\n                    </div>\n                    <button\n                      type=\"button\"\n                      className=\"ml-auto flex-shrink-0 rounded-full bg-white p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                    >\n                      <span className=\"sr-only\">View notifications</span>\n                      <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                  <div className=\"mt-3 space-y-1\">\n                    {userNavigation.map((item) => (\n                      <Disclosure.Button\n                        key={item.name}\n                        as=\"a\"\n                        href={item.href}\n                        className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-800\"\n                      >\n                        {item.name}\n                      </Disclosure.Button>\n                    ))}\n                  </div>\n                </div>\n              </Disclosure.Panel>\n            </>\n          )}\n        </Disclosure>\n\n        <div className=\"py-10\">\n          <header>\n            <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n              <h1 className=\"text-3xl font-bold leading-tight tracking-tight text-gray-900\">Dashboard</h1>\n            </div>\n          </header>\n          <main>\n            <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">{/* Your content */}</div>\n          </main>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json(\n      {\n        errors: {\n          email: \"A user already exists with this email\",\n          password: null,\n        },\n      },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    redirectTo,\n    remember: false,\n    request,\n    userId: user.id,\n  });\n};\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Sign Up\" }];\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData<typeof action>();\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\">\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email ? (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              ) : null}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password ? (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              ) : null}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              Already have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "/*\n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    plugins: [\n      // ...\n      require('@tailwindcss/forms'),\n    ],\n  }\n  ```\n*/\nimport { PhotoIcon, UserCircleIcon } from '@heroicons/react/24/solid'\n\nexport default function Example() {\n  return (\n    <form>\n      <div className=\"space-y-12\">\n        <div className=\"border-b border-gray-900/10 pb-12\">\n          <h2 className=\"text-base font-semibold leading-7 text-gray-900\">Profile</h2>\n          <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n            This information will be displayed publicly so be careful what you share.\n          </p>\n\n          <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\n            <div className=\"sm:col-span-4\">\n              <label htmlFor=\"username\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Username\n              </label>\n              <div className=\"mt-2\">\n                <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 sm:max-w-md\">\n                  <span className=\"flex select-none items-center pl-3 text-gray-500 sm:text-sm\">workcation.com/</span>\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    autoComplete=\"username\"\n                    className=\"block flex-1 border-0 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\n                    placeholder=\"janesmith\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-span-full\">\n              <label htmlFor=\"about\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                About\n              </label>\n              <div className=\"mt-2\">\n                <textarea\n                  id=\"about\"\n                  name=\"about\"\n                  rows={3}\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  defaultValue={''}\n                />\n              </div>\n              <p className=\"mt-3 text-sm leading-6 text-gray-600\">Write a few sentences about yourself.</p>\n            </div>\n\n            <div className=\"col-span-full\">\n              <label htmlFor=\"photo\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Photo\n              </label>\n              <div className=\"mt-2 flex items-center gap-x-3\">\n                <UserCircleIcon className=\"h-12 w-12 text-gray-300\" aria-hidden=\"true\" />\n                <button\n                  type=\"button\"\n                  className=\"rounded-md bg-white px-2.5 py-1.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\"\n                >\n                  Change\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-span-full\">\n              <label htmlFor=\"cover-photo\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Cover photo\n              </label>\n              <div className=\"mt-2 flex justify-center rounded-lg border border-dashed border-gray-900/25 px-6 py-10\">\n                <div className=\"text-center\">\n                  <PhotoIcon className=\"mx-auto h-12 w-12 text-gray-300\" aria-hidden=\"true\" />\n                  <div className=\"mt-4 flex text-sm leading-6 text-gray-600\">\n                    <label\n                      htmlFor=\"file-upload\"\n                      className=\"relative cursor-pointer rounded-md bg-white font-semibold text-indigo-600 focus-within:outline-none focus-within:ring-2 focus-within:ring-indigo-600 focus-within:ring-offset-2 hover:text-indigo-500\"\n                    >\n                      <span>Upload a file</span>\n                      <input id=\"file-upload\" name=\"file-upload\" type=\"file\" className=\"sr-only\" />\n                    </label>\n                    <p className=\"pl-1\">or drag and drop</p>\n                  </div>\n                  <p className=\"text-xs leading-5 text-gray-600\">PNG, JPG, GIF up to 10MB</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"border-b border-gray-900/10 pb-12\">\n          <h2 className=\"text-base font-semibold leading-7 text-gray-900\">Personal Information</h2>\n          <p className=\"mt-1 text-sm leading-6 text-gray-600\">Use a permanent address where you can receive mail.</p>\n\n          <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\n            <div className=\"sm:col-span-3\">\n              <label htmlFor=\"first-name\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                First name\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  type=\"text\"\n                  name=\"first-name\"\n                  id=\"first-name\"\n                  autoComplete=\"given-name\"\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n\n            \n\n            <div className=\"sm:col-span-4\">\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Email address\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n\n            <div className=\"sm:col-span-3\">\n              <label htmlFor=\"country\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Country\n              </label>\n              <div className=\"mt-2\">\n                <select\n                  id=\"country\"\n                  name=\"country\"\n                  autoComplete=\"country-name\"\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6\"\n                >\n                  <option>United States</option>\n                  <option>Canada</option>\n                  <option>Mexico</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"col-span-full\">\n              <label htmlFor=\"street-address\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Street address\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  type=\"text\"\n                  name=\"street-address\"\n                  id=\"street-address\"\n                  autoComplete=\"street-address\"\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n\n            <div className=\"sm:col-span-2 sm:col-start-1\">\n              <label htmlFor=\"city\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                City\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  type=\"text\"\n                  name=\"city\"\n                  id=\"city\"\n                  autoComplete=\"address-level2\"\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n\n            <div className=\"sm:col-span-2\">\n              <label htmlFor=\"region\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                State / Province\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  type=\"text\"\n                  name=\"region\"\n                  id=\"region\"\n                  autoComplete=\"address-level1\"\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n\n            <div className=\"sm:col-span-2\">\n              <label htmlFor=\"postal-code\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                ZIP / Postal code\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  type=\"text\"\n                  name=\"postal-code\"\n                  id=\"postal-code\"\n                  autoComplete=\"postal-code\"\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"border-b border-gray-900/10 pb-12\">\n          <h2 className=\"text-base font-semibold leading-7 text-gray-900\">Notifications</h2>\n          <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n            We'll always let you know about important changes, but you pick what else you want to hear about.\n          </p>\n\n          <div className=\"mt-10 space-y-10\">\n            <fieldset>\n              <legend className=\"text-sm font-semibold leading-6 text-gray-900\">By Email</legend>\n              <div className=\"mt-6 space-y-6\">\n                <div className=\"relative flex gap-x-3\">\n                  <div className=\"flex h-6 items-center\">\n                    <input\n                      id=\"comments\"\n                      name=\"comments\"\n                      type=\"checkbox\"\n                      className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                    />\n                  </div>\n                  <div className=\"text-sm leading-6\">\n                    <label htmlFor=\"comments\" className=\"font-medium text-gray-900\">\n                      Comments\n                    </label>\n                    <p className=\"text-gray-500\">Get notified when someones posts a comment on a posting.</p>\n                  </div>\n                </div>\n                <div className=\"relative flex gap-x-3\">\n                  <div className=\"flex h-6 items-center\">\n                    <input\n                      id=\"candidates\"\n                      name=\"candidates\"\n                      type=\"checkbox\"\n                      className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                    />\n                  </div>\n                  <div className=\"text-sm leading-6\">\n                    <label htmlFor=\"candidates\" className=\"font-medium text-gray-900\">\n                      Candidates\n                    </label>\n                    <p className=\"text-gray-500\">Get notified when a candidate applies for a job.</p>\n                  </div>\n                </div>\n                <div className=\"relative flex gap-x-3\">\n                  <div className=\"flex h-6 items-center\">\n                    <input\n                      id=\"offers\"\n                      name=\"offers\"\n                      type=\"checkbox\"\n                      className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                    />\n                  </div>\n                  <div className=\"text-sm leading-6\">\n                    <label htmlFor=\"offers\" className=\"font-medium text-gray-900\">\n                      Offers\n                    </label>\n                    <p className=\"text-gray-500\">Get notified when a candidate accepts or rejects an offer.</p>\n                  </div>\n                </div>\n              </div>\n            </fieldset>\n            <fieldset>\n              <legend className=\"text-sm font-semibold leading-6 text-gray-900\">Push Notifications</legend>\n              <p className=\"mt-1 text-sm leading-6 text-gray-600\">These are delivered via SMS to your mobile phone.</p>\n              <div className=\"mt-6 space-y-6\">\n                <div className=\"flex items-center gap-x-3\">\n                  <input\n                    id=\"push-everything\"\n                    name=\"push-notifications\"\n                    type=\"radio\"\n                    className=\"h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                  />\n                  <label htmlFor=\"push-everything\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                    Everything\n                  </label>\n                </div>\n                <div className=\"flex items-center gap-x-3\">\n                  <input\n                    id=\"push-email\"\n                    name=\"push-notifications\"\n                    type=\"radio\"\n                    className=\"h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                  />\n                  <label htmlFor=\"push-email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                    Same as email\n                  </label>\n                </div>\n                <div className=\"flex items-center gap-x-3\">\n                  <input\n                    id=\"push-nothing\"\n                    name=\"push-notifications\"\n                    type=\"radio\"\n                    className=\"h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                  />\n                  <label htmlFor=\"push-nothing\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                    No push notifications\n                  </label>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-6 flex items-center justify-end gap-x-6\">\n        <button type=\"button\" className=\"text-sm font-semibold leading-6 text-gray-900\">\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          className=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n        >\n          Save\n        </button>\n      </div>\n    </form>\n  )\n}\n", "import { ActionFunction } from \"@remix-run/node\";\nimport { prisma } from \"~/db.server\";\n\nexport let action: ActionFunction = async({ request }) => { \n    const formData = await request.formData();\n    \n    const name = formData.get('name') as string;\n    const date = formData.get('date') as string;\n    const time = formData.get('time') as string;\n\n     const a = await prisma.scheduling.create({\n        data: {\n          name: name,   \n          date: date,\n          time: time\n        }\n      })\n       \n      console.log(a)\n        return 'a'\n}\n\n\nexport default function CreateAcount() {\n  \n    return (\n        <>\n          <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n              <img\n                className=\"mx-auto h-10 w-auto\"\n                src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n                alt=\"Your Company\"\n              />\n              <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n                Fa\u00E7a seu cadastro\n              </h2>\n            </div>\n    \n            <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n              <form className=\"space-y-6\" action=\"\" method=\"post\">\n                <div>\n                  \n                  <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                    Endere\u00E7o\n                  </label>\n                  <div className=\"mt-2\">\n                    <input\n                      id=\"email\"\n                      placeholder=\"rua, n\u00FAmero da casa e bairro\"\n                      name=\"name\"\n                      type=\"text\"\n                      autoComplete=\"email\"\n                      required\n                      className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                    />\n                  </div>\n                  \n                  <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900 \">\n                    Email\n                  </label>\n                  <div className=\"mt-2\">\n                    <input\n                      id=\"email\"\n                      placeholder=\"Digite um email v\u00E1lido\"\n                      name=\"date\"\n                      type=\"date\"\n                      autoComplete=\"email\"\n                      required\n                      className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                    />\n                  </div>\n                  \n                </div>\n    \n                <div>\n                  <div className=\"flex items-center justify-between\">\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                      Senha\n                    </label>\n                  </div>\n                  <div className=\"mt-2\">\n                    <input\n                      id=\"password\"\n                      placeholder=\"Digite sua senha\"\n                      name=\"time\"\n                      type=\"time\"\n                      autoComplete=\"current-password\"\n                      required\n                      className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                    />\n                  </div>\n                </div>\n    \n                <div>\n                  \n                  <button\n                    type=\"submit\"\n                    className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                  >\n                    Cadastrar\n                  </button>\n                </div>\n              </form>\n    \n              <p className=\"mt-10 text-center text-sm text-gray-500\">\n                Voc\u00EA j\u00E1 tem uma conta?{' '}\n                <a href=\"/login\" className=\"font-semibold leading-6 text-indigo-600 hover:text-indigo-500\">\n                  J\u00E1 tenho uma conta\n                </a>\n              </p>\n            </div>\n          </div>\n        </>\n      )\n    }\n    ", "\nimport * as entryServer from \"/Users/calebe/Documents/dev/remix/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/cadastro_reme.tsx\";\nimport * as route2 from \"./routes/cookie.server.ts\";\nimport * as route3 from \"./routes/errorpassword.tsx\";\nimport * as route4 from \"./routes/login_cliente.tsx\";\nimport * as route5 from \"./routes/notes.$noteId.tsx\";\nimport * as route6 from \"./routes/createacount.tsx\";\nimport * as route7 from \"./routes/notes._index.tsx\";\nimport * as route8 from \"./routes/successemail.tsx\";\nimport * as route9 from \"./routes/emailerror.tsx\";\nimport * as route10 from \"./routes/notes.new.tsx\";\nimport * as route11 from \"./routes/calebe.tsx\";\nimport * as route12 from \"./routes/navbar.tsx\";\nimport * as route13 from \"./routes/email.tsx\";\nimport * as route14 from \"./routes/login.tsx\";\nimport * as route15 from \"./routes/notes.tsx\";\nimport * as route16 from \"./routes/venda.tsx\";\nimport * as route17 from \"./routes/erro.tsx\";\nimport * as route18 from \"./routes/join.tsx\";\nimport * as route19 from \"./routes/root.tsx\";\nimport * as route20 from \"./routes/asd.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/cadastro_reme\": {\n      id: \"routes/cadastro_reme\",\n      parentId: \"root\",\n      path: \"cadastro_reme\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/cookie.server\": {\n      id: \"routes/cookie.server\",\n      parentId: \"root\",\n      path: \"cookie/server\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/errorpassword\": {\n      id: \"routes/errorpassword\",\n      parentId: \"root\",\n      path: \"errorpassword\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/login_cliente\": {\n      id: \"routes/login_cliente\",\n      parentId: \"root\",\n      path: \"login_cliente\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/notes.$noteId\": {\n      id: \"routes/notes.$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/createacount\": {\n      id: \"routes/createacount\",\n      parentId: \"root\",\n      path: \"createacount\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/notes._index\": {\n      id: \"routes/notes._index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/successemail\": {\n      id: \"routes/successemail\",\n      parentId: \"root\",\n      path: \"successemail\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/emailerror\": {\n      id: \"routes/emailerror\",\n      parentId: \"root\",\n      path: \"emailerror\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/notes.new\": {\n      id: \"routes/notes.new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/calebe\": {\n      id: \"routes/calebe\",\n      parentId: \"root\",\n      path: \"calebe\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/navbar\": {\n      id: \"routes/navbar\",\n      parentId: \"root\",\n      path: \"navbar\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/email\": {\n      id: \"routes/email\",\n      parentId: \"root\",\n      path: \"email\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/venda\": {\n      id: \"routes/venda\",\n      parentId: \"root\",\n      path: \"venda\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/erro\": {\n      id: \"routes/erro\",\n      parentId: \"root\",\n      path: \"erro\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/root\": {\n      id: \"routes/root\",\n      parentId: \"root\",\n      path: \"root\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/asd\": {\n      id: \"routes/asd\",\n      parentId: \"root\",\n      path: \"asd\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    }\n  };"],
  "mappings": "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",
  "names": ["cssBundleHref", "isbot", "import_node", "import_react", "import_node", "bcrypt", "invariant", "user", "import_jsx_dev_runtime", "loader", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "import_node", "import_jsx_dev_runtime", "Example", "loader", "import_jsx_dev_runtime", "loader", "Example", "action", "loader", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "loader", "invariant", "action", "action", "import_react", "import_solid", "import_jsx_dev_runtime", "import_solid", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "action", "import_react", "import_jsx_dev_runtime", "action", "import_node", "import_react", "import_jsx_dev_runtime", "action", "_a", "_b", "_c", "_d", "action", "Example", "links", "import_react", "import_node", "import_solid", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "links", "action", "user", "Example", "import_jsx_dev_runtime", "action", "import_node", "import_react", "import_jsx_dev_runtime", "action", "loader", "import_node", "import_react", "import_react", "route", "user", "import_jsx_dev_runtime", "loader", "user", "Example", "import_react", "import_outline", "import_jsx_dev_runtime", "user", "navigation", "userNavigation", "classNames", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "user", "_a", "_b", "_c", "_d", "root_exports", "Example", "import_solid", "import_jsx_dev_runtime", "action", "CreateAcount", "import_jsx_dev_runtime", "action", "CreateAcount", "root_exports"]
}
