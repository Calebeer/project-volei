{
  "version": 3,
  "sources": ["empty-module:~/db.server", "browser-route-module:routes/login.tsx?browser", "../../../app/routes/login.tsx"],
  "sourcesContent": ["module.exports = {};", "export { default, meta } from \"./routes/login.tsx\";", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useLoaderData, useSearchParams } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\nimport { prisma } from \"~/db.server\";\n\nimport { verifyLogin } from \"~/models/user.server\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  console.log('executando')\n\n\n\n  const users = await prisma.user.findMany()\n\n  console.log(users)\n\n\n\n  try{\n    await prisma.user.create({data:{\n      email:\"calebeapollo26@gmail.com\",\n      password:\"81020002\"\n    }}) \n  }catch(e: any){\n    console.log('deu erro', e.message);\n    \n  }\n  \n  console.log('executou')\n  return json({users});\n};\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Login\" }];\n\nexport default function LoginPage() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <>\n\n      {data.users.map(user =>(\n        <div>\n          {user.password} - {user.email}\n        </div>\n      ))}\n\n\n\n    </> \n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACAlB;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAIA,gBAAuB;AAqCnB;AANG,IAAM,OAAwB,MAAM,CAAC,EAAE,OAAO,QAAQ,CAAC;AAE/C,SAAR,YAA6B;AAClC,QAAM,OAAO,cAA6B;AAE1C,SACE,sFAEG,eAAK,MAAM,IAAI,UACd,mDAAC,SACE;AAAA,SAAK;AAAA,IAAS;AAAA,IAAI,KAAK;AAAA,OAD1B;AAAA;AAAA;AAAA;AAAA,SAEA,CACD,KANH;AAAA;AAAA;AAAA;AAAA,SAUA;AAEJ;",
  "names": []
}
