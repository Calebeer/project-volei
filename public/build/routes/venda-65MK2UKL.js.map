{
  "version": 3,
  "sources": ["browser-route-module:routes/venda.tsx?browser", "../../../app/routes/venda.tsx"],
  "sourcesContent": ["export { default } from \"./routes/venda.tsx\";", "import { ActionFunction} from \"@remix-run/node\";\nimport { LoaderFunction} from \"@remix-run/node\"\nimport { useLoaderData } from \"@remix-run/react\";\nimport { prisma } from \"~/db.server\";\nimport { LoaderArgs, json } from \"@remix-run/server-runtime\";\nimport { log } from \"console\";\nimport Navbar from \"./navbar\";\n\n\n\n\n// export let loader1: LoaderFunction = async({ request }) => { \n//   const url = new URL(request.url);\n//     const queryParams = url.searchParams;\n\n//     const cpf_cliente = queryParams.get('cpf_cliente');\n//     const nome_remedio = queryParams.get('nome_remedio');\n//     const quantidade = queryParams.get('quantidade');\n\n//     if(!cpf_cliente){\n//         return{error:'N\u00E3o foi fornecido um cpf'}\n//     }\n\n//     if(!nome_remedio){\n//         return{error:'N\u00E3o foi fornecido uma idade'}\n//     }\n\n//     if(!quantidade){\n//         return{error:'N\u00E3o foi fornecido um nome'}\n//     }\n\n//     await prisma.venda.create({\n//         data: {\n//           cpf:cpf_cliente,\n//           nome_remedio:nome_remedio,\n//           quantidade:quantidade\n//         }\n//       })\n\n      \n\n   \n\n//     return{sucess:true}\n\n// }\n\nexport let action: ActionFunction = async({ request }) => { \n  const formData = await request.formData();\n\n  const cpf = formData.get(\"cpf_cliente\") as string;\n  const nome_remedio = formData.get(\"nome_remedio\") as string;\n  const quantidade = formData.get(\"quantidade\") as string;\n  \n  await prisma.venda.create({\n    data: {\n      cpf:cpf,\n      nome_remedio:nome_remedio,\n      quantidade:quantidade\n    }\n  })\n\n  return cpf\n}\n\n\nexport async function loader() { \n    const remedio = await prisma.farmacia.findMany()\n    const primeiraVenda =  await prisma.venda.findFirst()\n\n    return json({remedio, primeiraVenda})\n}\n\nexport default function Example() {\n  \n   const {remedio, primeiraVenda} = useLoaderData<typeof loader>();\n\n    return (\n      <>\n\n   <Navbar/>\n        <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n          <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n            <img\n              className=\"mx-auto h-10 w-auto\"\n              src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n              alt=\"Your Company\"\n            />\n            <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n              Realizar Venda\n            </h2>\n          </div>\n  \n          <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n            <form className=\"space-y-6\" action=\"\" method=\"post\">\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Cpf do Cliente\n                </label>\n                <div className=\"mt-2\">\n                <input name=\"cpf_cliente\" type=\"text\" className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Nome do Rem\u00E9dio\n                </label>\n                <div className=\"mt-2\">\n                <select name=\"nome\" id=\"\">\n                    {\n                      remedio.map((cliente) => (\n                          <option value={cliente.nome}>\n                            {cliente.nome}\n                          </option>\n                      ))\n                    }\n                  </select>\n                </div>\n              \n  \n              <div>\n                <div className=\"flex items-center justify-between\">\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                    Quantidade\n                  </label>\n                </div>\n                <div className=\"mt-2\">\n                  <input name=\"quantidade\" type=\"text\" className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n  \n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                >\n                  Salvar\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </>\n    )\n  }"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAGA,gBAAuB;AA2EjB;AALS,SAAR,UAA2B;AAE/B,QAAM,EAAC,SAAS,cAAa,IAAI,cAA6B;AAE7D,SACE,sFAEH;AAAA,uDAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,WAAO;AAAA,IACF,mDAAC,SAAI,WAAU,qEACb;AAAA,yDAAC,SAAI,WAAU,oCACb;AAAA;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,KAAI;AAAA,YACJ,KAAI;AAAA;AAAA,UAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIA;AAAA,QACA,mDAAC,QAAG,WAAU,+EAA8E,8BAA5F;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WARF;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,MAEA,mDAAC,SAAI,WAAU,0CACb,6DAAC,UAAK,WAAU,aAAY,QAAO,IAAG,QAAO,QAC3C;AAAA,2DAAC,SACC;AAAA,6DAAC,WAAM,SAAQ,SAAQ,WAAU,qDAAoD,8BAArF;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,SAAI,WAAU,QACf;AAAA,YAAC;AAAA;AAAA,cAAM,MAAK;AAAA,cAAc,MAAK;AAAA,cAAO,WAAU;AAAA;AAAA,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,KAFF;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,QAEA,mDAAC,WAAM,SAAQ,SAAQ,WAAU,qDAAoD,kCAArF;AAAA;AAAA;AAAA;AAAA,eAEE;AAAA,QACA,mDAAC,SAAI,WAAU,QACf,6DAAC,YAAO,MAAK,QAAO,IAAG,IAEjB,kBAAQ,IAAI,CAAC,YACT,mDAAC,YAAO,OAAO,QAAQ,MACpB,kBAAQ,QADX;AAAA;AAAA;AAAA;AAAA,eAEA,CACH,KANP;AAAA;AAAA;AAAA;AAAA,eAQE,KATF;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,QAGF,mDAAC,SACC;AAAA,6DAAC,SAAI,WAAU,qCACb,6DAAC,WAAM,SAAQ,YAAW,WAAU,qDAAoD,0BAAxF;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,mDAAC,SAAI,WAAU,QACb;AAAA,YAAC;AAAA;AAAA,cAAM,MAAK;AAAA,cAAa,MAAK;AAAA,cAAO,WAAU;AAAA;AAAA,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACA,KAFF;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,QAEA,mDAAC,SACC;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,WAAU;AAAA,YACX;AAAA;AAAA,UAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KANF;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,WA9CF;AAAA;AAAA;AAAA;AAAA,aA+CA,KAhDF;AAAA;AAAA;AAAA;AAAA,aAiDA;AAAA,SA7DF;AAAA;AAAA;AAAA;AAAA,WA8DA;AAAA,OAjEF;AAAA;AAAA;AAAA;AAAA,SAkEA;AAEJ;",
  "names": []
}
